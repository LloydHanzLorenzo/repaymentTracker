/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.example.microloanrepaymenttracker;

import java.math.BigDecimal;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class Borrowers extends javax.swing.JInternalFrame {
    private int selectedBorrowerId = -1;

    /**
     * Creates new form Borrowers
     */
    public Borrowers() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        tblBorrowers.setModel(new DefaultTableModel (
                new Object[][]{},
                new String[]{"ID", "Full Name", "Birthdate", "Valid ID No.", "Email", "Phone", "Address", "Employment Status", "Monthly Income", "Existing Debt", "Loan Amount", "Loan Purpose", "Loan Status", "Application Date", "Approval Date", "Repayment Term", "Interest Rate", "Notes"}
        ));
        
        tblBorrowers.getSelectionModel().addListSelectionListener(event -> {
            int row = tblBorrowers.getSelectedRow();
            if (row >= 0) {
                selectedBorrowerId = (int) tblBorrowers.getValueAt(row, 0); // Get ID
                txtName.setText(tblBorrowers.getValueAt(row, 1).toString());
                
                Date birthdate = (Date) tblBorrowers.getValueAt(row, 2);
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                txtBirthdate.setText(dateFormat.format(birthdate));
                
                txtIDNumber.setText(tblBorrowers.getValueAt(row, 3).toString());
                txtEmail.setText(tblBorrowers.getValueAt(row, 4).toString());
                txtPhone.setText(tblBorrowers.getValueAt(row, 5).toString());
                txtAddress.setText(tblBorrowers.getValueAt(row, 6).toString());
                txtEmployment.setSelectedItem(tblBorrowers.getValueAt(row, 7).toString());
                txtIncome.setText(tblBorrowers.getValueAt(row, 8).toString());
                txtDebt.setText(tblBorrowers.getValueAt(row, 9).toString());
                txtLoanAmt.setText(tblBorrowers.getValueAt(row, 10).toString());
                txtPurpose.setText(tblBorrowers.getValueAt(row, 11).toString());
                txtStatus.setSelectedItem(tblBorrowers.getValueAt(row, 12).toString());
                
                Timestamp applicationDate = (Timestamp) tblBorrowers.getValueAt(row, 13);
                txtApplication.setText(dateFormat.format(new Date(applicationDate.getTime())));
                
                Timestamp approvalDate = (Timestamp) tblBorrowers.getValueAt(row, 14);
                if (approvalDate != null) {
                    txtApproval.setText(dateFormat.format(new Date(approvalDate.getTime())));
                } else {
                    txtApproval.setText("");
                }
                
                txtTerm.setText(tblBorrowers.getValueAt(row, 15).toString());
                txtInterest.setText(tblBorrowers.getValueAt(row, 16).toString());
                txtNotes.setText(tblBorrowers.getValueAt(row, 17).toString());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrowers = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBirthdate = new javax.swing.JFormattedTextField();
        txtIDNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        txtLoanAmt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPurpose = new javax.swing.JTextField();
        txtEmployment = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIncome = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtDebt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtApplication = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtApproval = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtTerm = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtInterest = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(860, 610));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel1.setText("Borrower Records");

        tblBorrowers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblBorrowers);

        jLabel2.setText("Full Name");

        jLabel3.setText("Birthdate");

        txtBirthdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBirthdateActionPerformed(evt);
            }
        });

        jLabel4.setText("Valid ID Number");

        jLabel5.setText("Email");

        jLabel6.setText("Phone");

        jLabel7.setText("Address");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        jLabel10.setText("Loan Amount");

        txtLoanAmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoanAmtActionPerformed(evt);
            }
        });

        jLabel11.setText("Loan Purpose");

        txtPurpose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPurposeActionPerformed(evt);
            }
        });

        txtEmployment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unemployed", "Self-Employed", "Employed" }));

        jLabel12.setText("Loan Status");

        txtStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Approved", "Rejected", "Paid" }));

        jLabel8.setText("Employment Status");

        jLabel9.setText("Monthly Income");

        txtIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIncomeActionPerformed(evt);
            }
        });

        jLabel13.setText("Existing Debt");

        txtDebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDebtActionPerformed(evt);
            }
        });

        jLabel14.setText("Application Date");

        txtApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApplicationActionPerformed(evt);
            }
        });

        jLabel15.setText("Approval Date");

        txtApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApprovalActionPerformed(evt);
            }
        });

        jLabel16.setText("Repayment Term");

        txtTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTermActionPerformed(evt);
            }
        });

        jLabel17.setText("Interest Rate");

        txtInterest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInterestActionPerformed(evt);
            }
        });

        jLabel18.setText("Notes");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane3.setViewportView(txtNotes);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel19.setText("Search:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnLoad.setText("Load Data");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnLoad)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(txtBirthdate)
                            .addComponent(txtIDNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(txtEmail)
                            .addComponent(jLabel6)
                            .addComponent(txtPhone)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtPurpose, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtLoanAmt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDebt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtIncome, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEmployment, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(5, 5, 5)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(txtApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(txtApproval, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(txtInterest, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIDNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmployment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIncome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDebt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoanAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPurpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdate)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSave)
                                .addComponent(btnDelete))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel14)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtApplication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(50, 50, 50))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtApproval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(50, 50, 50))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel16)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtInterest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(164, 164, 164))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoad)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearch)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBirthdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBirthdateActionPerformed
        // TODO add your handling code here:
        try {
            txtBirthdate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                new javax.swing.text.MaskFormatter("##/##/####")));
        txtBirthdate.setValue(new Date());
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtBirthdateActionPerformed

    private void txtLoanAmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoanAmtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoanAmtActionPerformed

    private void txtPurposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPurposeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPurposeActionPerformed

    private void txtIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIncomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIncomeActionPerformed

    private void txtDebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDebtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDebtActionPerformed

    private void txtApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApplicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApplicationActionPerformed

    private void txtApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApprovalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApprovalActionPerformed

    private void txtTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTermActionPerformed

    private void txtInterestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInterestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInterestActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String fullName = txtName.getText();
        String birthDate = txtBirthdate.getText();
        String idNumber = txtIDNumber.getText();
        String emailAddress = txtEmail.getText();
        String phoneNumber = txtPhone.getText();
        String address = txtAddress.getText();
        String employmentStatus = (String) txtEmployment.getSelectedItem();
        BigDecimal monthlyIncome = new BigDecimal(txtIncome.getText());
        BigDecimal existingDebt = new BigDecimal(txtDebt.getText());
        BigDecimal loanAmount = new BigDecimal(txtLoanAmt.getText());
        String loanPurpose = txtPurpose.getText();
        String loanStatus = (String) txtStatus.getSelectedItem();
        String applicationDate = txtApplication.getText();
        String approvalDate = txtApproval.getText();
        int repaymentTerm = Integer.parseInt(txtTerm.getText());
        BigDecimal interestRate = new BigDecimal(txtInterest.getText());
        String notes = txtNotes.getText();

        Date birthDateParsed = null;
        Date applicationDateParsed = null;
        Date approvalDateParsed = null;

        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            birthDateParsed = dateFormat.parse(birthDate);
            applicationDateParsed = dateFormat.parse(applicationDate);
            if (!approvalDate.isEmpty()) {
                approvalDateParsed = dateFormat.parse(approvalDate);
            }
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this,
                "Invalid date format. Use DD/MM/YYYY (e.g., 31/12/2023).",
                "Date Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Connection conn = DriverManager.getConnection (
                "jdbc:mysql://localhost:3306/borrowerdb", "root", "");

            String sql = "INSERT INTO borrowers (full_name, birthdate, id_number, email, phone, address, employment_status, monthly_income, existing_debt, loan_amount, loan_purpose, loan_status, application_date, approval_date, repayment_term, interest_rate, notes)"
            + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);

            pstmt.setString(1, fullName);
            pstmt.setDate(2, new java.sql.Date(birthDateParsed.getTime()));
            pstmt.setString(3, idNumber);
            pstmt.setString(4, emailAddress);
            pstmt.setString(5, phoneNumber);
            pstmt.setString(6, address);
            pstmt.setString(7, employmentStatus);
            pstmt.setBigDecimal(8, monthlyIncome);
            pstmt.setBigDecimal(9, existingDebt);
            pstmt.setBigDecimal(10, loanAmount);
            pstmt.setString(11, loanPurpose);
            pstmt.setString(12, loanStatus);
            pstmt.setTimestamp(13, new Timestamp(applicationDateParsed.getTime()));
            pstmt.setTimestamp(14, approvalDateParsed != null ?
                new Timestamp(approvalDateParsed.getTime()) : null);
            pstmt.setInt(15, repaymentTerm);
            pstmt.setBigDecimal(16, interestRate);
            pstmt.setString(17, notes);

            int rows = pstmt.executeUpdate();
            if(rows > 0) {
                JOptionPane.showMessageDialog(this, "Borrower inserted successfully!");
                txtName.setText("");
                txtBirthdate.setText("");
                txtIDNumber.setText("");
                txtEmail.setText("");
                txtPhone.setText("");
                txtAddress.setText("");
                txtEmployment.setSelectedIndex(0);
                txtIncome.setText("");
                txtDebt.setText("");
                txtLoanAmt.setText("");
                txtPurpose.setText("");
                txtStatus.setSelectedIndex(0);
                txtApplication.setText("");
                txtApproval.setText("");
                txtTerm.setText("");
                txtInterest.setText("");
                txtNotes.setText("");
                btnLoad.doClick(); // Reload table
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void clearInfo() {
        txtName.setText("");
        txtBirthdate.setText("");
        txtIDNumber.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtAddress.setText("");
        txtEmployment.setSelectedIndex(0);
        txtIncome.setText("");
        txtDebt.setText("");
        txtLoanAmt.setText("");
        txtPurpose.setText("");
        txtStatus.setSelectedIndex(0);
        txtApplication.setText("");
        txtApproval.setText("");
        txtTerm.setText("");
        txtInterest.setText("");
        txtNotes.setText("");
        selectedBorrowerId = -1;
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String fullName = txtName.getText();
        String birthDate = txtBirthdate.getText();
        String idNumber = txtIDNumber.getText();
        String emailAddress = txtEmail.getText();
        String phoneNumber = txtPhone.getText();
        String address = txtAddress.getText();
        String employmentStatus = (String) txtEmployment.getSelectedItem();
        BigDecimal monthlyIncome = new BigDecimal(txtIncome.getText());
        BigDecimal existingDebt = new BigDecimal(txtDebt.getText());
        BigDecimal loanAmount = new BigDecimal(txtLoanAmt.getText());
        String loanStatus = (String) txtStatus.getSelectedItem();
        String loanPurpose = txtPurpose.getText();
        String applicationDate = txtApplication.getText();
        String approvalDate = txtApproval.getText();
        int repaymentTerm = Integer.parseInt(txtTerm.getText());
        BigDecimal interestRate = new BigDecimal(txtInterest.getText());
        String notes = txtNotes.getText();

        if (fullName.isEmpty() || birthDate.isEmpty() || idNumber.isEmpty() || emailAddress.isEmpty() || phoneNumber.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields.");
            return;
        }

        if (selectedBorrowerId == -1) {
            JOptionPane.showMessageDialog(this, "Please select a borrower to update.");
            return;
        }

        Date birthDateParsed = null;
        Date applicationDateParsed = null;
        Date approvalDateParsed = null;

        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            birthDateParsed = dateFormat.parse(birthDate);
            applicationDateParsed = dateFormat.parse(applicationDate);
            if (!approvalDate.isEmpty()) {
                approvalDateParsed = dateFormat.parse(approvalDate);
            }
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this,
                "Invalid date format. Use DD/MM/YYYY (e.g., 31/12/2023).",
                "Date Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/borrowerdb", "root", "");

            String sql = "UPDATE borrowers SET full_name=?, birthdate=?, id_number=?, email=?, phone=?, " +
            "address=?, employment_status=?, monthly_income=?, existing_debt=?, " +
            "loan_amount=?, loan_purpose=?, loan_status=?, application_date=?, " +
            "approval_date=?, repayment_term=?, interest_rate=?, notes=? WHERE id=?";

            PreparedStatement pstmt = conn.prepareStatement(sql);

            pstmt.setString(1, fullName);
            pstmt.setDate(2, new java.sql.Date(birthDateParsed.getTime()));
            pstmt.setString(3, idNumber);
            pstmt.setString(4, emailAddress);
            pstmt.setString(5, phoneNumber);
            pstmt.setString(6, address);
            pstmt.setString(7, employmentStatus);
            pstmt.setBigDecimal(8, monthlyIncome);
            pstmt.setBigDecimal(9, existingDebt);
            pstmt.setBigDecimal(10, loanAmount);
            pstmt.setString(11, loanPurpose);
            pstmt.setString(12, loanStatus);
            pstmt.setTimestamp(13, new Timestamp(applicationDateParsed.getTime()));
            pstmt.setTimestamp(14, approvalDateParsed != null ?
                new Timestamp(approvalDateParsed.getTime()) : null);
            pstmt.setInt(15, repaymentTerm);
            pstmt.setBigDecimal(16, interestRate);
            pstmt.setString(17, notes);
            pstmt.setInt(18, selectedBorrowerId);

            int rows = pstmt.executeUpdate();

            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Borrower updated successfully!");
                btnLoad.doClick(); // Reload table
                selectedBorrowerId = -1;
                clearInfo();
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(selectedBorrowerId == -1){
            JOptionPane.showMessageDialog(this, "Please select a customer to delete!");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to delete this customer?",
            "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if(confirm != JOptionPane.YES_OPTION) return;

        try {
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/borrowerdb", "root", "");

            String sql = "DELETE FROM borrowers WHERE id = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, selectedBorrowerId);

            int rows = pstmt.executeUpdate();
            if(rows > 0){
                JOptionPane.showMessageDialog(this, "Borrower deleted successfully!");
                btnLoad.doClick(); // Refresh table
                clearInfo();
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String keyword = txtSearch.getText().trim();

        try {
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/borrowerdb", "root", "");

            String sql = "SELECT * FROM borrowers WHERE "
            + "full_name LIKE ? OR "
            + "id_number LIKE ? OR "
            + "email LIKE ? OR "
            + "phone LIKE ? OR "
            + "address LIKE ? OR "
            + "employment_status LIKE ? OR "
            + "loan_purpose LIKE ? OR "
            + "loan_status LIKE ? OR "
            + "notes LIKE ?";

            PreparedStatement pstmt = conn.prepareStatement(sql);
            String likeKeyword = "%" + keyword + "%";

            pstmt.setString(1, likeKeyword);
            pstmt.setString(2, likeKeyword);
            pstmt.setString(3, likeKeyword);
            pstmt.setString(4, likeKeyword);
            pstmt.setString(5, likeKeyword);
            pstmt.setString(6, likeKeyword);
            pstmt.setString(7, likeKeyword);
            pstmt.setString(8, likeKeyword);
            pstmt.setString(9, likeKeyword);

            ResultSet rs = pstmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Full Name");
            model.addColumn("Birthdate");
            model.addColumn("ID Number");
            model.addColumn("Email");
            model.addColumn("Phone");
            model.addColumn("Address");
            model.addColumn("Employment Status");
            model.addColumn("Monthly Income");
            model.addColumn("Existing Debt");
            model.addColumn("Loan Amount");
            model.addColumn("Loan Purpose");
            model.addColumn("Loan Status");
            model.addColumn("Application Date");
            model.addColumn("Approval Date");
            model.addColumn("Repayment Term");
            model.addColumn("Interest Rate");
            model.addColumn("Notes");

            while(rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("full_name"),
                    rs.getDate("birthdate"),
                    rs.getString("id_number"),
                    rs.getString("email"),
                    rs.getString("phone"),
                    rs.getString("address"),
                    rs.getString("employment_status"),
                    rs.getBigDecimal("monthly_income"),
                    rs.getBigDecimal("existing_debt"),
                    rs.getBigDecimal("loan_amount"),
                    rs.getString("loan_purpose"),
                    rs.getString("loan_status"),
                    rs.getTimestamp("application_date"),
                    rs.getTimestamp("approval_date"),
                    rs.getInt("repayment_term"),
                    rs.getBigDecimal("interest_rate"),
                    rs.getString("notes")
                });
            }

            tblBorrowers.setModel(model);
            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Search failed: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        try {
            // Connect to MySQL
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/borrowerdb", "root",
                "");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM borrowers");
            DefaultTableModel model = (DefaultTableModel)
            tblBorrowers.getModel();
            model.setRowCount(0); // Clear existing rows

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("full_name"),
                    rs.getDate("birthdate"),
                    rs.getString("id_number"),
                    rs.getString("email"),
                    rs.getString("phone"),
                    rs.getString("address"),
                    rs.getString("employment_status"),
                    rs.getBigDecimal("monthly_income"),
                    rs.getBigDecimal("existing_debt"),
                    rs.getBigDecimal("loan_amount"),
                    rs.getString("loan_purpose"),
                    rs.getString("loan_status"),
                    rs.getTimestamp("application_date"),
                    rs.getTimestamp("approval_date"),
                    rs.getInt("repayment_term"),
                    rs.getBigDecimal("interest_rate"),
                    rs.getString("notes")
                });
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLoadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblBorrowers;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtApplication;
    private javax.swing.JTextField txtApproval;
    private javax.swing.JFormattedTextField txtBirthdate;
    private javax.swing.JTextField txtDebt;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JComboBox<String> txtEmployment;
    private javax.swing.JTextField txtIDNumber;
    private javax.swing.JTextField txtIncome;
    private javax.swing.JTextField txtInterest;
    private javax.swing.JTextField txtLoanAmt;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPurpose;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JComboBox<String> txtStatus;
    private javax.swing.JTextField txtTerm;
    // End of variables declaration//GEN-END:variables
}
